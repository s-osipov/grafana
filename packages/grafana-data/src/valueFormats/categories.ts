import { toHex, sci, toHex0x, toPercent, toPercentUnit } from './arithmeticFormatters';
import {
  dateTimeAsIso,
  dateTimeAsIsoNoDateIfToday,
  dateTimeAsUS,
  dateTimeAsUSNoDateIfToday,
  getDateTimeAsLocalFormat,
  getDateTimeAsLocalFormatNoDateIfToday,
  dateTimeFromNow,
  toClockMilliseconds,
  toClockSeconds,
  toDays,
  toDurationInDaysHoursMinutesSeconds,
  toDurationInHoursMinutesSeconds,
  toDurationInMilliseconds,
  toDurationInSeconds,
  toHours,
  toMicroSeconds,
  toMilliSeconds,
  toMinutes,
  toNanoSeconds,
  toSeconds,
  toTimeTicks,
  dateTimeSystemFormatter,
} from './dateTimeFormatters';
import { binaryPrefix, currency, SIPrefix } from './symbolFormatters';
import {
  locale,
  scaledUnits,
  simpleCountUnit,
  toFixedUnit,
  ValueFormatCategory,
  stringFormater,
  booleanValueFormatter,
} from './valueFormats';

export const getCategories = (): ValueFormatCategory[] => [
  {
    name: 'Разное',
    formats: [
      { name: 'Число', id: 'none', fn: toFixedUnit('') },
      { name: 'Строка', id: 'string', fn: stringFormater },
      {
        name: 'приставка',
        id: 'short',
        fn: scaledUnits(1000, ['', ' K', ' Mil', ' Bil', ' Tri', ' Quadr', ' Quint', ' Sext', ' Sept']),
      },
      { name: 'СИ приставки', id: 'sishort', fn: SIPrefix('') },
      { name: 'Процент (0-100)', id: 'percent', fn: toPercent },
      { name: 'Процент (0.0-1.0)', id: 'percentunit', fn: toPercentUnit },
      { name: 'Влажность (%H)', id: 'humidity', fn: toFixedUnit('%H') },
      { name: 'Децибел', id: 'dB', fn: toFixedUnit('dB') },
      { name: 'Кандела (cd)', id: 'candela', fn: SIPrefix('cd') },
      { name: 'Hexadecimal (0x)', id: 'hex0x', fn: toHex0x },
      { name: 'Hexadecimal', id: 'hex', fn: toHex },
      { name: 'Научное обозначение', id: 'sci', fn: sci },
      { name: 'Формал локали', id: 'locale', fn: locale },
      { name: 'Пиксели', id: 'pixel', fn: toFixedUnit('px') },
    ],
  },
  {
    name: 'Ускорение',
    formats: [
      { name: 'М/с²', id: 'accMS2', fn: toFixedUnit('m/sec²') },
      { name: 'Фут/с²', id: 'accFS2', fn: toFixedUnit('f/sec²') },
      { name: 'Число g', id: 'accG', fn: toFixedUnit('g') },
    ],
  },
  {
    name: 'Угол',
    formats: [
      { name: 'Градусы (°)', id: 'degree', fn: toFixedUnit('°') },
      { name: 'Радианы', id: 'radian', fn: toFixedUnit('rad') },
      { name: 'Градианы', id: 'grad', fn: toFixedUnit('grad') },
      { name: 'Угловые минуты', id: 'arcmin', fn: toFixedUnit('arcmin') },
      { name: 'Угловые секунды', id: 'arcsec', fn: toFixedUnit('arcsec') },
    ],
  },
  {
    name: 'Площадь',
    formats: [
      { name: 'Квадратные метры (m²)', id: 'areaM2', fn: toFixedUnit('m²') },
      { name: 'Квадратные футы (ft²)', id: 'areaF2', fn: toFixedUnit('ft²') },
      { name: 'Квадратные мили (mi²)', id: 'areaMI2', fn: toFixedUnit('mi²') },
      { name: 'Акры (ac)', id: 'acres', fn: toFixedUnit('ac') },
      { name: 'Гектары (ha)', id: 'hectares', fn: toFixedUnit('ha') },
    ],
  },
  {
    name: 'Вычисление',
    formats: [
      { name: 'FLOP/s', id: 'flops', fn: SIPrefix('FLOPS') },
      { name: 'MFLOP/s', id: 'mflops', fn: SIPrefix('FLOPS', 2) },
      { name: 'GFLOP/s', id: 'gflops', fn: SIPrefix('FLOPS', 3) },
      { name: 'TFLOP/s', id: 'tflops', fn: SIPrefix('FLOPS', 4) },
      { name: 'PFLOP/s', id: 'pflops', fn: SIPrefix('FLOPS', 5) },
      { name: 'EFLOP/s', id: 'eflops', fn: SIPrefix('FLOPS', 6) },
      { name: 'ZFLOP/s', id: 'zflops', fn: SIPrefix('FLOPS', 7) },
      { name: 'YFLOP/s', id: 'yflops', fn: SIPrefix('FLOPS', 8) },
    ],
  },
  {
    name: 'Концентрация',
    formats: [
      { name: 'миллионная доля (ppm)', id: 'ppm', fn: toFixedUnit('ppm') },
      { name: 'миллиардная доля (ppb)', id: 'conppb', fn: toFixedUnit('ppb') },
      { name: 'нанограмм на кубический метр (ng/m³)', id: 'conngm3', fn: toFixedUnit('ng/m³') },
      { name: 'нанограмм на нормальный кубический метр (ng/Nm³)', id: 'conngNm3', fn: toFixedUnit('ng/Nm³') },
      { name: 'микрограмм на кубический метр (μg/m³)', id: 'conμgm3', fn: toFixedUnit('μg/m³') },
      { name: 'микрограмм на нормальный кубический метр (μg/Nm³)', id: 'conμgNm3', fn: toFixedUnit('μg/Nm³') },
      { name: 'миллиграмм на кубический метр (mg/m³)', id: 'conmgm3', fn: toFixedUnit('mg/m³') },
      { name: 'миллиграмм на нормальный кубический метр (mg/Nm³)', id: 'conmgNm3', fn: toFixedUnit('mg/Nm³') },
      { name: 'грамм на кубический метр (g/m³)', id: 'congm3', fn: toFixedUnit('g/m³') },
      { name: 'грамм на нормальный кубический метр (g/Nm³)', id: 'congNm3', fn: toFixedUnit('g/Nm³') },
      { name: 'миллиграммы на децилитр (mg/dL)', id: 'conmgdL', fn: toFixedUnit('mg/dL') },
      { name: 'миллимоль на литр (mmol/L)', id: 'conmmolL', fn: toFixedUnit('mmol/L') },
    ],
  },
  {
    name: 'Валюта',
    formats: [
      { name: 'Доллары ($)', id: 'currencyUSD', fn: currency('$') },
      { name: 'Фунты (£)', id: 'currencyGBP', fn: currency('£') },
      { name: 'Евро (€)', id: 'currencyEUR', fn: currency('€') },
      { name: 'Йена (¥)', id: 'currencyJPY', fn: currency('¥') },
      { name: 'Рубли (₽)', id: 'currencyRUB', fn: currency('₽') },
      { name: 'Гривны (₴)', id: 'currencyUAH', fn: currency('₴') },
      { name: 'Реал (R$)', id: 'currencyBRL', fn: currency('R$') },
      { name: 'Датская крона (kr)', id: 'currencyDKK', fn: currency('kr', true) },
      { name: 'Исландская крона (kr)', id: 'currencyISK', fn: currency('kr', true) },
      { name: 'Норвежская крона (kr)', id: 'currencyNOK', fn: currency('kr', true) },
      { name: 'Шведская крона (kr)', id: 'currencySEK', fn: currency('kr', true) },
      { name: 'Чешская крона (czk)', id: 'currencyCZK', fn: currency('czk') },
      { name: 'Швейцарский франк (CHF)', id: 'currencyCHF', fn: currency('CHF') },
      { name: 'Польские злоты (PLN)', id: 'currencyPLN', fn: currency('PLN') },
      { name: 'Биткоин (฿)', id: 'currencyBTC', fn: currency('฿') },
      { name: 'Милли биткоин (฿)', id: 'currencymBTC', fn: currency('mBTC') },
      { name: 'Микро биткоин(฿)', id: 'currencyμBTC', fn: currency('μBTC') },
      { name: 'Южноафриканский рэнд (R)', id: 'currencyZAR', fn: currency('R') },
      { name: 'Индийская рупия (₹)', id: 'currencyINR', fn: currency('₹') },
      { name: 'Южнокорейская вона (₩)', id: 'currencyKRW', fn: currency('₩') },
      { name: 'Индонезийская рупия (Rp)', id: 'currencyIDR', fn: currency('Rp') },
      { name: 'Филлипинский песо (PHP)', id: 'currencyPHP', fn: currency('PHP') },
      { name: 'Вьетнамский донг (VND)', id: 'currencyVND', fn: currency('đ', true) },
      { name: 'Турецкая лира (₺)', id: 'currencyTRY', fn: currency('₺', true) },
      { name: 'Малазийский ринггит (RM)', id: 'currencyMYR', fn: currency('RM') },
      { name: 'Тихоокеанский франк (XPF)', id: 'currencyXPF', fn: currency('XPF') },
      { name: 'Болгарский лев (BGN)', id: 'currencyBGN', fn: currency('BGN') },
      { name: 'Гуарани́ (₲)', id: 'currencyPYG', fn: currency('₲') },
      { name: 'Уругвайский песо (UYU)', id: 'currencyUYU', fn: currency('UYU') },
      { name: 'Новый израильский шекель (₪)', id: 'currencyILS', fn: currency('₪') },
    ],
  },
  {
    name: 'Данные',
    formats: [
      { name: 'байты(IEC)', id: 'bytes', fn: binaryPrefix('B') },
      { name: 'байты(SI)', id: 'decbytes', fn: SIPrefix('B') },
      { name: 'биты(IEC)', id: 'bits', fn: binaryPrefix('b') },
      { name: 'биты(SI)', id: 'decbits', fn: SIPrefix('b') },
      { name: 'кибибайты', id: 'kbytes', fn: binaryPrefix('B', 1) },
      { name: 'килобайты', id: 'deckbytes', fn: SIPrefix('B', 1) },
      { name: 'мебибайты', id: 'mbytes', fn: binaryPrefix('B', 2) },
      { name: 'мегабайты', id: 'decmbytes', fn: SIPrefix('B', 2) },
      { name: 'гибибайты', id: 'gbytes', fn: binaryPrefix('B', 3) },
      { name: 'гигабайты', id: 'decgbytes', fn: SIPrefix('B', 3) },
      { name: 'тебибайты', id: 'tbytes', fn: binaryPrefix('B', 4) },
      { name: 'терабайты', id: 'dectbytes', fn: SIPrefix('B', 4) },
      { name: 'пебибайты', id: 'pbytes', fn: binaryPrefix('B', 5) },
      { name: 'петабайты', id: 'decpbytes', fn: SIPrefix('B', 5) },
    ],
  },
  {
    name: 'Передача данных',
    formats: [
      { name: 'пакетов/с', id: 'pps', fn: SIPrefix('p/s') },
      { name: 'байт/с(IEC)', id: 'binBps', fn: binaryPrefix('B/s') },
      { name: 'байт/с(SI)', id: 'Bps', fn: SIPrefix('B/s') },
      { name: 'бит/с(IEC)', id: 'binbps', fn: binaryPrefix('b/s') },
      { name: 'бит/с(SI)', id: 'bps', fn: SIPrefix('b/s') },
      { name: 'кибибайт/с', id: 'KiBs', fn: binaryPrefix('B/s', 1) },
      { name: 'кибибит/с', id: 'Kibits', fn: binaryPrefix('b/s', 1) },
      { name: 'килобайт/с', id: 'KBs', fn: SIPrefix('B/s', 1) },
      { name: 'килобит/с', id: 'Kbits', fn: SIPrefix('b/s', 1) },
      { name: 'мебибайт/с', id: 'MiBs', fn: binaryPrefix('B/s', 2) },
      { name: 'мебибит/с', id: 'Mibits', fn: binaryPrefix('b/s', 2) },
      { name: 'менабайт/с', id: 'MBs', fn: SIPrefix('B/s', 2) },
      { name: 'мегабит/с', id: 'Mbits', fn: SIPrefix('b/s', 2) },
      { name: 'гибибайт/с', id: 'GiBs', fn: binaryPrefix('B/s', 3) },
      { name: 'гибибит/с', id: 'Gibits', fn: binaryPrefix('b/s', 3) },
      { name: 'гигабайт/с', id: 'GBs', fn: SIPrefix('B/s', 3) },
      { name: 'гигабит/с', id: 'Gbits', fn: SIPrefix('b/s', 3) },
      { name: 'тебибайтс/с', id: 'TiBs', fn: binaryPrefix('B/s', 4) },
      { name: 'тебибит/с', id: 'Tibits', fn: binaryPrefix('b/s', 4) },
      { name: 'терабайт/с', id: 'TBs', fn: SIPrefix('B/s', 4) },
      { name: 'терабит/с', id: 'Tbits', fn: SIPrefix('b/s', 4) },
      { name: 'пебибайт/с', id: 'PiBs', fn: binaryPrefix('B/s', 5) },
      { name: 'пебибит/с', id: 'Pibits', fn: binaryPrefix('b/s', 5) },
      { name: 'петабайт/с', id: 'PBs', fn: SIPrefix('B/s', 5) },
      { name: 'петабит/с', id: 'Pbits', fn: SIPrefix('b/s', 5) },
    ],
  },
  {
    name: 'Дата и время',
    formats: [
      { name: 'Дата и время ISO', id: 'dateTimeAsIso', fn: dateTimeAsIso },
      { name: 'Дата и время ISO (Без даты, если сегодня)', id: 'dateTimeAsIsoNoDateIfToday', fn: dateTimeAsIsoNoDateIfToday },
      { name: 'Дата и время US', id: 'dateTimeAsUS', fn: dateTimeAsUS },
      { name: 'Дата и время US (Без даты, если сегодня)', id: 'dateTimeAsUSNoDateIfToday', fn: dateTimeAsUSNoDateIfToday },
      { name: 'Дата и время местное', id: 'dateTimeAsLocal', fn: getDateTimeAsLocalFormat() },
      {
        name: 'Дата и время местное (Без даты, если сегодня)',
        id: 'dateTimeAsLocalNoDateIfToday',
        fn: getDateTimeAsLocalFormatNoDateIfToday(),
      },
      { name: 'Дата и время по умолчанию', id: 'dateTimeAsSystem', fn: dateTimeSystemFormatter },
      { name: 'С этого момента', id: 'dateTimeFromNow', fn: dateTimeFromNow },
    ],
  },
  {
    name: 'Энергия',
    formats: [
      { name: 'Ватт (Вт)', id: 'watt', fn: SIPrefix('W') },
      { name: 'Киловатт (кВт)', id: 'kwatt', fn: SIPrefix('W', 1) },
      { name: 'Мегаватт (МВт)', id: 'megwatt', fn: SIPrefix('W', 2) },
      { name: 'Гигаватт (ГВт)', id: 'gwatt', fn: SIPrefix('W', 3) },
      { name: 'Милливатт (мВт)', id: 'mwatt', fn: SIPrefix('W', -1) },
      { name: 'Ватт на кв. метр (Вт/м²)', id: 'Wm2', fn: toFixedUnit('W/m²') },
      { name: 'Вольт-Ампер (ВА)', id: 'voltamp', fn: SIPrefix('VA') },
      { name: 'Киловольт-Ампер (кВА)', id: 'kvoltamp', fn: SIPrefix('VA', 1) },
      { name: 'Вольт-Ампер реактивный (ВАр)', id: 'voltampreact', fn: SIPrefix('VAr') },
      { name: 'Киловольт-Ампер реактивный (кВАр)', id: 'kvoltampreact', fn: SIPrefix('VAr', 1) },
      { name: 'Ватт-час (Втч)', id: 'watth', fn: SIPrefix('Wh') },
      { name: 'Ватт-час в килограмм (Втч/кг)', id: 'watthperkg', fn: SIPrefix('Wh/kg') },
      { name: 'Киловатт-час (кВтч)', id: 'kwatth', fn: SIPrefix('Wh', 1) },
      { name: 'Киловатт-мин (кВтм)', id: 'kwattm', fn: SIPrefix('W-Min', 1) },
      { name: 'Мегаватт-час (МВтч)', id: 'mwatth', fn: SIPrefix('Wh', 2) },
      { name: 'Ампер-час (Ач)', id: 'amph', fn: SIPrefix('Ah') },
      { name: 'Килоампер-час (кАч)', id: 'kamph', fn: SIPrefix('Ah', 1) },
      { name: 'Миллиампер-час (мАч)', id: 'mamph', fn: SIPrefix('Ah', -1) },
      { name: 'джоуль (Дж)', id: 'joule', fn: SIPrefix('J') },
      { name: 'Электрон-вольт (эВ)', id: 'ev', fn: SIPrefix('eV') },
      { name: 'Ампер (A)', id: 'amp', fn: SIPrefix('A') },
      { name: 'килоампер (кА)', id: 'kamp', fn: SIPrefix('A', 1) },
      { name: 'Миллиампер (мА)', id: 'mamp', fn: SIPrefix('A', -1) },
      { name: 'Вольт (В)', id: 'volt', fn: SIPrefix('V') },
      { name: 'Киловольт (кВ)', id: 'kvolt', fn: SIPrefix('V', 1) },
      { name: 'Милливольт (мВ)', id: 'mvolt', fn: SIPrefix('V', -1) },
      { name: 'Децибел-милливатт (дБм)', id: 'dBm', fn: SIPrefix('dBm') },
      { name: 'Миллиом (мОм)', id: 'mohm', fn: SIPrefix('Ω', -1) },
      { name: 'Ом (Ом)', id: 'ohm', fn: SIPrefix('Ω') },
      { name: 'Килоом(кОм)', id: 'kohm', fn: SIPrefix('Ω', 1) },
      { name: 'Мегаом (МОм)', id: 'Mohm', fn: SIPrefix('Ω', 2) },
      { name: 'Фарад (Ф)', id: 'farad', fn: SIPrefix('F') },
      { name: 'Микрофарад(мкФ)', id: 'µfarad', fn: SIPrefix('F', -2) },
      { name: 'Нанофарад (нФ)', id: 'nfarad', fn: SIPrefix('F', -3) },
      { name: 'Пикофарад (пФ)', id: 'pfarad', fn: SIPrefix('F', -4) },
      { name: 'Фемтофарад (фФ)', id: 'ffarad', fn: SIPrefix('F', -5) },
      { name: 'Генри (Гн)', id: 'henry', fn: SIPrefix('H') },
      { name: 'Миллигенри (мГн)', id: 'mhenry', fn: SIPrefix('H', -1) },
      { name: 'Микрогенри (мкГн)', id: 'µhenry', fn: SIPrefix('H', -2) },
      { name: 'Люмены (Лм', id: 'lumens', fn: SIPrefix('Lm') },
    ],
  },
  {
    name: 'Поток',
    formats: [
      { name: 'Галлон США в минуту (gpm)', id: 'flowgpm', fn: toFixedUnit('gpm') },
      { name: 'Кубический метр в секунду (м³/с)', id: 'flowcms', fn: toFixedUnit('cms') },
      { name: 'Кубическмй фут в секунду (фут³/с)', id: 'flowcfs', fn: toFixedUnit('cfs') },
      { name: 'Кубический фут в минуту (фут³/мин)', id: 'flowcfm', fn: toFixedUnit('cfm') },
      { name: 'Литр в час', id: 'litreh', fn: toFixedUnit('L/h') },
      { name: 'Литр в минуту (Л/мин)', id: 'flowlpm', fn: toFixedUnit('L/min') },
      { name: 'Миллилитр в минуту (мЛ/мин)', id: 'flowmlpm', fn: toFixedUnit('mL/min') },
      { name: 'Люкс (лк)', id: 'lux', fn: toFixedUnit('lux') },
    ],
  },
  {
    name: 'Сила',
    formats: [
      { name: 'Ньютон-метр (Нм)', id: 'forceNm', fn: SIPrefix('Nm') },
      { name: 'Килоньютон-метр (кНм)', id: 'forcekNm', fn: SIPrefix('Nm', 1) },
      { name: 'Ньютон (Н)', id: 'forceN', fn: SIPrefix('N') },
      { name: 'Килоньютон (кН)', id: 'forcekN', fn: SIPrefix('N', 1) },
    ],
  },
  {
    name: 'Хешрейт',
    formats: [
      { name: 'хеш в секунду', id: 'Hs', fn: SIPrefix('H/s') },
      { name: 'килохеш в секунду', id: 'KHs', fn: SIPrefix('H/s', 1) },
      { name: 'мегахеш в секунду', id: 'MHs', fn: SIPrefix('H/s', 2) },
      { name: 'гигахеш в секунду', id: 'GHs', fn: SIPrefix('H/s', 3) },
      { name: 'терахеш в секунду', id: 'THs', fn: SIPrefix('H/s', 4) },
      { name: 'петахеш в секунду', id: 'PHs', fn: SIPrefix('H/s', 5) },
      { name: 'экзахеш в секунду', id: 'EHs', fn: SIPrefix('H/s', 6) },
    ],
  },
  {
    name: 'Масса',
    formats: [
      { name: 'миллиграмм (мг)', id: 'massmg', fn: SIPrefix('g', -1) },
      { name: 'грамм (г)', id: 'massg', fn: SIPrefix('g') },
      { name: 'фунт', id: 'masslb', fn: toFixedUnit('lb') },
      { name: 'килограмм (кг)', id: 'masskg', fn: SIPrefix('g', 1) },
      { name: 'тонна (т)', id: 'masst', fn: toFixedUnit('t') },
    ],
  },
  {
    name: 'Длина',
    formats: [
      { name: 'миллиметр (мм)', id: 'lengthmm', fn: SIPrefix('m', -1) },
      { name: 'дюйм (in)', id: 'lengthin', fn: toFixedUnit('in') },
      { name: 'фут (ft)', id: 'lengthft', fn: toFixedUnit('ft') },
      { name: 'метр (м)', id: 'lengthm', fn: SIPrefix('m') },
      { name: 'километр (км)', id: 'lengthkm', fn: SIPrefix('m', 1) },
      { name: 'миля (mi)', id: 'lengthmi', fn: toFixedUnit('mi') },
    ],
  },
  {
    name: 'Давление',
    formats: [
      { name: 'Миллибар', id: 'pressurembar', fn: SIPrefix('bar', -1) },
      { name: 'Бар', id: 'pressurebar', fn: SIPrefix('bar') },
      { name: 'Килобар', id: 'pressurekbar', fn: SIPrefix('bar', 1) },
      { name: 'Паскаль', id: 'pressurepa', fn: SIPrefix('Pa') },
      { name: 'Гектопаскаль', id: 'pressurehpa', fn: toFixedUnit('hPa') },
      { name: 'Килопаскаль', id: 'pressurekpa', fn: toFixedUnit('kPa') },
      { name: 'Дюйм ртутного столба', id: 'pressurehg', fn: toFixedUnit('"Hg') },
      { name: 'PSI', id: 'pressurepsi', fn: scaledUnits(1000, ['psi', 'ksi', 'Mpsi']) },
    ],
  },
  {
    name: 'Радиация',
    formats: [
      { name: 'Беккерель (Бк)', id: 'radbq', fn: SIPrefix('Bq') },
      { name: 'Кюри (Ки)', id: 'radci', fn: SIPrefix('Ci') },
      { name: 'Грей (Гр)', id: 'radgy', fn: SIPrefix('Gy') },
      { name: 'рад', id: 'radrad', fn: SIPrefix('rad') },
      { name: 'Зиверт (Зв)', id: 'radsv', fn: SIPrefix('Sv') },
      { name: 'миллизиверт (мЗв)', id: 'radmsv', fn: SIPrefix('Sv', -1) },
      { name: 'микрозиверт (мкЗв)', id: 'radusv', fn: SIPrefix('Sv', -2) },
      { name: 'rem', id: 'radrem', fn: SIPrefix('rem') },
      { name: 'Экспозиционная доза (Кл/кг)', id: 'radexpckg', fn: SIPrefix('C/kg') },
      { name: 'рентген (Р)', id: 'radr', fn: SIPrefix('R') },
      { name: 'Зиверт в час (Зв/ч)', id: 'radsvh', fn: SIPrefix('Sv/h') },
      { name: 'миллизиверт в час (мЗв/ч)', id: 'radmsvh', fn: SIPrefix('Sv/h', -1) },
      { name: 'микрозиверт в час (мкЗв/ч)', id: 'radusvh', fn: SIPrefix('Sv/h', -2) },
    ],
  },
  {
    name: 'Скорость вращения',
    formats: [
      { name: 'Оборотов в минуту (rpm)', id: 'rotrpm', fn: toFixedUnit('rpm') },
      { name: 'Герц (Гц)', id: 'rothz', fn: SIPrefix('Hz') },
      { name: 'Килогерц (кГц)', id: 'rotkhz', fn: SIPrefix('Hz', 1) },
      { name: 'Мегагерц (МГц)', id: 'rotmhz', fn: SIPrefix('Hz', 2) },
      { name: 'Гигагерц (ГГц)', id: 'rotghz', fn: SIPrefix('Hz', 3) },
      { name: 'Радиан в секунду (рад/с)', id: 'rotrads', fn: toFixedUnit('rad/s') },
      { name: 'Градусов в секунду (°/с)', id: 'rotdegs', fn: toFixedUnit('°/s') },
    ],
  },
  {
    name: 'Температура',
    formats: [
      { name: 'Цельсий (°C)', id: 'celsius', fn: toFixedUnit('°C') },
      { name: 'Фаренгейт (°F)', id: 'fahrenheit', fn: toFixedUnit('°F') },
      { name: 'Кельвин (K)', id: 'kelvin', fn: toFixedUnit('K') },
    ],
  },
  {
    name: 'Время',
    formats: [
      { name: 'Герц (1/с)', id: 'hertz', fn: SIPrefix('Hz') },
      { name: 'наносекунды (нс)', id: 'ns', fn: toNanoSeconds },
      { name: 'микросекунды(мкс)', id: 'µs', fn: toMicroSeconds },
      { name: 'миллисекунды (мс)', id: 'ms', fn: toMilliSeconds },
      { name: 'секунды (с)', id: 's', fn: toSeconds },
      { name: 'минуты (мин)', id: 'm', fn: toMinutes },
      { name: 'часы (ч)', id: 'h', fn: toHours },
      { name: 'дни (д)', id: 'd', fn: toDays },
      { name: 'продолжительность (мс)', id: 'dtdurationms', fn: toDurationInMilliseconds },
      { name: 'продолжительность (с)', id: 'dtdurations', fn: toDurationInSeconds },
      { name: 'продолжительность (чч:мм:сс)', id: 'dthms', fn: toDurationInHoursMinutesSeconds },
      { name: 'продолжительность (д чч:мм:сс)', id: 'dtdhms', fn: toDurationInDaysHoursMinutesSeconds },
      { name: 'Таймер (с/100)', id: 'timeticks', fn: toTimeTicks },
      { name: 'час (мс)', id: 'clockms', fn: toClockMilliseconds },
      { name: 'час (с)', id: 'clocks', fn: toClockSeconds },
    ],
  },
  {
    name: 'Пропускная способность',
    formats: [
      { name: 'штук/с (cps)', id: 'cps', fn: simpleCountUnit('c/s') },
      { name: 'операций/с (ops)', id: 'ops', fn: simpleCountUnit('ops/s') },
      { name: 'запросов/с (rps)', id: 'reqps', fn: simpleCountUnit('req/s') },
      { name: 'чтений/с (rps)', id: 'rps', fn: simpleCountUnit('rd/s') },
      { name: 'записей/с (wps)', id: 'wps', fn: simpleCountUnit('wr/s') },
      { name: 'операций ввода-вывода/с(iops)', id: 'iops', fn: simpleCountUnit('io/s') },
      { name: 'событий/с (eps)', id: 'eps', fn: simpleCountUnit('evt/s') },
      { name: 'сообщений/с (mps)', id: 'mps', fn: simpleCountUnit('msg/s') },
      { name: 'записей/с (rps)', id: 'recps', fn: simpleCountUnit('rec/s') },
      { name: 'строк/с (rps)', id: 'rowsps', fn: simpleCountUnit('rows/s') },
      { name: 'штук/мин (cpm)', id: 'cpm', fn: simpleCountUnit('c/m') },
      { name: 'операций/мин (opm)', id: 'opm', fn: simpleCountUnit('ops/m') },
      { name: 'запросов/мин (rpm)', id: 'reqpm', fn: simpleCountUnit('req/m') },
      { name: 'чтений/мин (rpm)', id: 'rpm', fn: simpleCountUnit('rd/m') },
      { name: 'записей/мин (wpm)', id: 'wpm', fn: simpleCountUnit('wr/m') },
      { name: 'событий/мин (epm)', id: 'epm', fn: simpleCountUnit('evts/m') },
      { name: 'сообщений/мин (mpm)', id: 'mpm', fn: simpleCountUnit('msgs/m') },
      { name: 'записей/мин (rpm)', id: 'recpm', fn: simpleCountUnit('rec/m') },
      { name: 'строк/мин (rpm)', id: 'rowspm', fn: simpleCountUnit('rows/m') },
    ],
  },
  {
    name: 'Скорость',
    formats: [
      { name: 'метры в секунду (м/с)', id: 'velocityms', fn: toFixedUnit('m/s') },
      { name: 'километры в секунду (км/c)', id: 'velocitykmh', fn: toFixedUnit('km/h') },
      { name: 'мили в час (mph)', id: 'velocitymph', fn: toFixedUnit('mph') },
      { name: 'узел (kn)', id: 'velocityknot', fn: toFixedUnit('kn') },
    ],
  },
  {
    name: 'Объем',
    formats: [
      { name: 'миллилитр (мл)', id: 'mlitre', fn: SIPrefix('L', -1) },
      { name: 'литр (л)', id: 'litre', fn: SIPrefix('L') },
      { name: 'кубический метр', id: 'm3', fn: toFixedUnit('m³') },
      { name: 'Нормальный кубический метр', id: 'Nm3', fn: toFixedUnit('Nm³') },
      { name: 'кубический дециметр', id: 'dm3', fn: toFixedUnit('dm³') },
      { name: 'галлоны', id: 'gallons', fn: toFixedUnit('gal') },
    ],
  },
  {
    name: 'Логические значение',
    formats: [
      { name: 'Истина / Ложь', id: 'bool', fn: booleanValueFormatter('True', 'False') },
      { name: 'Да / нет', id: 'bool_yes_no', fn: booleanValueFormatter('Yes', 'No') },
      { name: 'Вкл / Выкл', id: 'bool_on_off', fn: booleanValueFormatter('On', 'Off') },
    ],
  },
];
